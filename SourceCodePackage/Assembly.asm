//function Sys.init 0
(Sys.init)
@0
D=A
($Esp_Lo~opñ0)
@inyectLocal-ñ-~♫0
D;JLE
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@$Esp_Lo~opñ0
0;JMP
(inyectLocal-ñ-~♫0)
//pushconstant4000
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
//poppointer0
@SP
A=M-1
D=M
@THIS
M=D
@SP
M=M-1
//pushconstant5000
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
//poppointer1
@SP
A=M-1
D=M
@THAT
M=D
@SP
M=M-1
//call Sys.main 0
/*push return address
*code after the 'call' or the next line*/
@Sys.main$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
//push LCL pointer value
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//push ARG pointer value
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//push THIS pointer value
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//push THAT pointer value
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//reposition ARG pointer value
@SP
D=M
@5
D=D-A
@0
D=D-A
@ARG
M=D
//repostion LCL pointer value
@SP
D=M
@LCL
M=D
//goto Sys.main
@Sys.main
0;JMP
(Sys.main$ret.1)
//poptemp1
@1
D=A
@5
D=A+D
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M//go to the last value store in the stack
A=M//go to this value
M=D
@SP
A=M
M=0
@SP
A=M-1
@SP
M=M-1
//labelLOOP
(Sys.init$LOOP)
//gotoLOOP
@Sys.init$LOOP
0;JMP
//function Sys.main 5
(Sys.main)
@5
D=A
($Esp_Lo~opñ1)
@inyectLocal-ñ-~♫1
D;JLE
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@$Esp_Lo~opñ1
0;JMP
(inyectLocal-ñ-~♫1)
//pushconstant4001
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
//poppointer0
@SP
A=M-1
D=M
@THIS
M=D
@SP
M=M-1
//pushconstant5001
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
//poppointer1
@SP
A=M-1
D=M
@THAT
M=D
@SP
M=M-1
//pushconstant200
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
//poplocal1
@1
D=A
@LCL
D=M+D
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M//go to the last value store in the stack
A=M//go to this value
M=D
@SP
A=M
M=0
@SP
A=M-1
@SP
M=M-1
//pushconstant40
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
//poplocal2
@2
D=A
@LCL
D=M+D
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M//go to the last value store in the stack
A=M//go to this value
M=D
@SP
A=M
M=0
@SP
A=M-1
@SP
M=M-1
//pushconstant6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//poplocal3
@3
D=A
@LCL
D=M+D
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M//go to the last value store in the stack
A=M//go to this value
M=D
@SP
A=M
M=0
@SP
A=M-1
@SP
M=M-1
//pushconstant123
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Sys.add12 1
/*push return address
*code after the 'call' or the next line*/
@Sys.add12$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
//push LCL pointer value
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//push ARG pointer value
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//push THIS pointer value
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//push THAT pointer value
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
//reposition ARG pointer value
@SP
D=M
@5
D=D-A
@1
D=D-A
@ARG
M=D
//repostion LCL pointer value
@SP
D=M
@LCL
M=D
//goto Sys.add12
@Sys.add12
0;JMP
(Sys.add12$ret.2)
//poptemp0
@0
D=A
@5
D=A+D
@SP
A=M
M=D
@SP
A=M-1
D=M
@SP
A=M//go to the last value store in the stack
A=M//go to this value
M=D
@SP
A=M
M=0
@SP
A=M-1
@SP
M=M-1
//pushlocal0
@0
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushlocal1
@1
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushlocal2
@2
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushlocal3
@3
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushlocal4
@4
D=A
@LCL
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//'add' command
@SP
A=M-1
D=M
A=A-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
//'add' command
@SP
A=M-1
D=M
A=A-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
//'add' command
@SP
A=M-1
D=M
A=A-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
//'add' command
@SP
A=M-1
D=M
A=A-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
//RETURN
//get and save the retrun address
@LCL
D=M
@5
D=D-A
A=D
D=M
@RFRNAD~
M=D
//put the value in ARG from the caller
@SP
A=M-1
D=M
@ARG
A=M
M=D//reposition SP
@ARG
D=M
@SP
M=D+1
/*
Restore and recuperate the values
*THAT
*THIS
*ARG
*LCL
*/
//restore THAT
@LCL
A=M-1
D=M
@THAT
M=D
//restore THIS
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
//restore ARG
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
//restore LCL
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
//goto Return-Addr
@RFRNAD~
A=M
0;JMP
//function Sys.add12 0
(Sys.add12)
@0
D=A
($Esp_Lo~opñ2)
@inyectLocal-ñ-~♫2
D;JLE
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@$Esp_Lo~opñ2
0;JMP
(inyectLocal-ñ-~♫2)
//pushconstant4002
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
//poppointer0
@SP
A=M-1
D=M
@THIS
M=D
@SP
M=M-1
//pushconstant5002
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
//poppointer1
@SP
A=M-1
D=M
@THAT
M=D
@SP
M=M-1
//pushargument0
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//pushconstant12
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
//'add' command
@SP
A=M-1
D=M
A=A-1
D=D+M
@SP
A=M-1
A=A-1
M=D
@SP
M=M-1
//RETURN
//get and save the retrun address
@LCL
D=M
@5
D=D-A
A=D
D=M
@RFRNAD~
M=D
//put the value in ARG from the caller
@SP
A=M-1
D=M
@ARG
A=M
M=D//reposition SP
@ARG
D=M
@SP
M=D+1
/*
Restore and recuperate the values
*THAT
*THIS
*ARG
*LCL
*/
//restore THAT
@LCL
A=M-1
D=M
@THAT
M=D
//restore THIS
@2
D=A
@LCL
A=M-D
D=M
@THIS
M=D
//restore ARG
@3
D=A
@LCL
A=M-D
D=M
@ARG
M=D
//restore LCL
@4
D=A
@LCL
A=M-D
D=M
@LCL
M=D
//goto Return-Addr
@RFRNAD~
A=M
0;JMP
